"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _react=require("react");var _reactAddonsUpdate=_interopRequireDefault(require("react-addons-update"));var _reactNative=require("react-native");var _models=require("./models");var _default=function _default(_ref){var data=_ref.data,debounce=_ref.debounce,listWidth=_ref.listWidth,propsItemHeight=_ref.propsItemHeight,numColumns=_ref.numColumns,onOrderChanged=_ref.onOrderChanged;var _useState=(0,_react.useState)(false),_useState2=(0,_slicedToArray2.default)(_useState,2),isLock=_useState2[0],setIsLock=_useState2[1];var _useState3=(0,_react.useState)(true),_useState4=(0,_slicedToArray2.default)(_useState3,2),isEnableScroll=_useState4[0],setIsEnableScroll=_useState4[1];var _useState5=(0,_react.useState)(undefined),_useState6=(0,_slicedToArray2.default)(_useState5,2),dragIndex=_useState6[0],setDragIndex=_useState6[1];var _useState7=(0,_react.useState)(undefined),_useState8=(0,_slicedToArray2.default)(_useState7,2),dragToIndex=_useState8[0],setDragToIndex=_useState8[1];var count=(0,_react.useMemo)(function(){return data.length;},[data]);var isDragging=(0,_react.useMemo)(function(){return dragIndex!==undefined;},[dragIndex]);var animDirectionArray=(0,_react.useMemo)(function(){return new Array(count).fill(0).map(function(_,index){if(dragIndex===undefined||dragToIndex===undefined){return _models.MOVEMENT.restore;}if(dragIndex===index){return _models.MOVEMENT.dragging;}if(dragToIndex<dragIndex){if(index>dragIndex){return _models.MOVEMENT.restore;}if(index>=dragToIndex){return _models.MOVEMENT.next;}}else if(dragToIndex>dragIndex){if(index<dragIndex){return _models.MOVEMENT.restore;}if(index<=dragToIndex){return _models.MOVEMENT.prev;}}return _models.MOVEMENT.restore;});},[count,dragIndex,dragToIndex]);var timerRef=(0,_react.useRef)();var itemWidth=(0,_react.useMemo)(function(){return(listWidth||_reactNative.Dimensions.get('screen').width)/(numColumns||1);},[listWidth,numColumns]);var itemHeight=(0,_react.useMemo)(function(){return propsItemHeight||itemWidth;},[propsItemHeight,itemWidth]);var sectionWidth=(0,_react.useMemo)(function(){return itemWidth/2;},[itemWidth]);var sectionHeight=(0,_react.useMemo)(function(){return itemHeight/2;},[itemHeight]);var lockTouch=(0,_react.useCallback)(function(){return setIsLock(true);},[]);var unlockTouch=(0,_react.useCallback)(function(){return setIsLock(false);},[]);var onStartDrag=(0,_react.useCallback)(function(index){setIsEnableScroll(false);setDragIndex(index);},[]);var updateDragToIndex=(0,_react.useCallback)(function(index){if(debounce===undefined){setDragToIndex(index);return;}if(timerRef.current!==undefined){clearTimeout(timerRef.current);}timerRef.current=setTimeout(function(){setDragToIndex(index);},debounce);},[debounce]);var onEndDrag=(0,_react.useCallback)(function(from,to){setIsEnableScroll(true);setDragIndex(undefined);setDragToIndex(undefined);if(from===to){return;}var temp=data[from];var orderedData=(0,_reactAddonsUpdate.default)(data,{$splice:[[from,1],[to,0,temp]]});onOrderChanged(orderedData,from,to);},[data,onOrderChanged]);return{isLock:isLock,isDragging:isDragging,count:count,animDirectionArray:animDirectionArray,isEnableScroll:isEnableScroll,itemWidth:itemWidth,itemHeight:itemHeight,sectionWidth:sectionWidth,sectionHeight:sectionHeight,lockTouch:lockTouch,unlockTouch:unlockTouch,onStartDrag:onStartDrag,updateDragToIndex:updateDragToIndex,onEndDrag:onEndDrag};};exports.default=_default;
//# sourceMappingURL=useDraggableGridViewHooks.js.map
"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _react=_interopRequireDefault(require("react"));var _reactNative=require("react-native");var _DraggableItem=_interopRequireDefault(require("./components/DraggableItem"));var _styles=_interopRequireDefault(require("./styles"));var _useDraggableGridViewHooks=_interopRequireDefault(require("./useDraggableGridViewHooks"));var _jsxRuntime=require("react/jsx-runtime");var _this=void 0,_jsxFileName="/Users/tuehoang/workspace/react-native/react-native-drag-sort-gridview/src/DraggableGridView.tsx";var DraggableGridView=function DraggableGridView(props){var style=props.style,contentContainerStyle=props.contentContainerStyle,data=props.data,isEditing=props.isEditing,_props$shouldVibrate=props.shouldVibrate,shouldVibrate=_props$shouldVibrate===void 0?true:_props$shouldVibrate,_props$shouldAnimOnRe=props.shouldAnimOnRelease,shouldAnimOnRelease=_props$shouldAnimOnRe===void 0?false:_props$shouldAnimOnRe,itemContainerStyle=props.itemContainerStyle,listWidth=props.listWidth,propsItemHeight=props.itemHeight,numColumns=props.numColumns,animMoveDuration=props.animMoveDuration,debounce=props.debounce,keyExtractor=props.keyExtractor,onOrderChanged=props.onOrderChanged,gridHeader=props.gridHeader,gridFooter=props.gridFooter;var _useDraggableGridView=(0,_useDraggableGridViewHooks.default)({data:data,listWidth:listWidth,propsItemHeight:propsItemHeight,numColumns:numColumns,debounce:debounce,onOrderChanged:onOrderChanged}),isLock=_useDraggableGridView.isLock,isDragging=_useDraggableGridView.isDragging,count=_useDraggableGridView.count,animDirectionArray=_useDraggableGridView.animDirectionArray,isEnableScroll=_useDraggableGridView.isEnableScroll,itemWidth=_useDraggableGridView.itemWidth,itemHeight=_useDraggableGridView.itemHeight,sectionWidth=_useDraggableGridView.sectionWidth,sectionHeight=_useDraggableGridView.sectionHeight,lockTouch=_useDraggableGridView.lockTouch,unlockTouch=_useDraggableGridView.unlockTouch,onStartDrag=_useDraggableGridView.onStartDrag,updateDragToIndex=_useDraggableGridView.updateDragToIndex,onEndDrag=_useDraggableGridView.onEndDrag;var renderItem=function renderItem(_ref){var item=_ref.item,index=_ref.index;return(0,_jsxRuntime.jsx)(_DraggableItem.default,{style:itemContainerStyle,itemWidth:itemWidth,itemHeight:itemHeight,sectionWidth:sectionWidth,sectionHeight:sectionHeight,numColumns:numColumns||1,itemLength:count,isDragging:isDragging,animDirection:animDirectionArray[index],index:index,isEditing:isEditing,shouldVibrate:shouldVibrate,shouldAnimOnRelease:shouldAnimOnRelease,animMoveDuration:animMoveDuration||1000,lockTouch:lockTouch,unlockTouch:unlockTouch,onStartDrag:onStartDrag,updateDragToIndex:updateDragToIndex,onEndDrag:onEndDrag,children:(0,_jsxRuntime.jsx)(_jsxRuntime.Fragment,{children:props.renderItem({item:item,index:index})})},keyExtractor(item));};return(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsxs)(_reactNative.ScrollView,Object.assign({},props,{style:[_styles.default.list,style],contentContainerStyle:[contentContainerStyle,_styles.default.content],scrollEnabled:isEnableScroll,children:[gridHeader==null?void 0:gridHeader(),data.map(function(item,index){return renderItem({item:item,index:index});}),gridFooter==null?void 0:gridFooter()]})),isLock===true&&(0,_jsxRuntime.jsx)(_reactNative.View,{style:_styles.default.uiBlock})]});};var _default=DraggableGridView;exports.default=_default;
//# sourceMappingURL=DraggableGridView.js.map
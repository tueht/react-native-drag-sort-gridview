"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _react=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _reactNativeReanimated=_interopRequireDefault(require("react-native-reanimated"));var _styles=_interopRequireDefault(require("./styles"));var _useDraggableItemHooks=_interopRequireDefault(require("./useDraggableItemHooks"));var _usePanResponderViewHooks=_interopRequireDefault(require("./usePanResponderViewHooks"));var _useReanimHooks2=_interopRequireDefault(require("./useReanimHooks"));var _jsxRuntime=require("react/jsx-runtime");var _this=void 0,_jsxFileName="/Users/tuehoang/workspace/react-native/react-native-drag-sort-gridview/src/components/DraggableItem.tsx";function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var DraggableItem=function DraggableItem(_ref){var children=_ref.children,style=_ref.style,itemWidth=_ref.itemWidth,itemHeight=_ref.itemHeight,sectionWidth=_ref.sectionWidth,sectionHeight=_ref.sectionHeight,numColumns=_ref.numColumns,isEditing=_ref.isEditing,shouldVibrate=_ref.shouldVibrate,shouldAnimOnRelease=_ref.shouldAnimOnRelease,index=_ref.index,itemLength=_ref.itemLength,isDragging=_ref.isDragging,animDirection=_ref.animDirection,animMoveDuration=_ref.animMoveDuration,lockTouch=_ref.lockTouch,unlockTouch=_ref.unlockTouch,onStartDrag=_ref.onStartDrag,updateDragToIndex=_ref.updateDragToIndex,onEndDrag=_ref.onEndDrag;var _useDraggableItemHook=(0,_useDraggableItemHooks.default)({animDirection:animDirection}),isDraggingItem=_useDraggableItemHook.isDraggingItem;var _useReanimHooks=(0,_useReanimHooks2.default)({itemWidth:itemWidth,itemHeight:itemHeight,numColumns:numColumns,isEditing:isEditing,shouldVibrate:shouldVibrate,isDragging:isDragging,isDraggingItem:isDraggingItem,index:index,animDirection:animDirection,animMoveDuration:animMoveDuration}),animatedStyles=_useReanimHooks.animatedStyles;var _usePanResponderViewH=(0,_usePanResponderViewHooks.default)({itemWidth:itemWidth,itemHeight:itemHeight,sectionWidth:sectionWidth,sectionHeight:sectionHeight,numColumns:numColumns,index:index,itemLength:itemLength,isEditing:isEditing,animMoveDuration:animMoveDuration,shouldAnimOnRelease:shouldAnimOnRelease,lockTouch:lockTouch,unlockTouch:unlockTouch,onStartDrag:onStartDrag,updateDragToIndex:updateDragToIndex,onEndDrag:onEndDrag}),panResponder=_usePanResponderViewH.panResponder,dragXAnim=_usePanResponderViewH.dragXAnim,dragYAnim=_usePanResponderViewH.dragYAnim;return(0,_jsxRuntime.jsx)(_reactNative.Animated.View,{style:[style,_styles.default.wrapper,{width:itemWidth,height:itemHeight},{transform:[{translateX:dragXAnim},{translateY:dragYAnim}]},isDraggingItem&&_styles.default.dragging],children:(0,_jsxRuntime.jsx)(_reactNativeReanimated.default.View,Object.assign({},panResponder.panHandlers,{style:[_styles.default.reanimatedWrapper,animatedStyles],children:children}))});};var _default=(0,_react.memo)(DraggableItem);exports.default=_default;
//# sourceMappingURL=DraggableItem.js.map